name: Deploy to EC2

# Task works on Pushes on either main or dev Branches
on:
  push:
    branches: [ "main", "dev" ]
    paths:
      - 'AIApp/**'

# Task Permissions
permissions:
  id-token: write
  contents: read

# Works only on Pushes Made by KazuhiraBenedictMiller
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.pusher.name == 'KazuhiraBenedictMiller'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: AlfredoAI

# Building Docker Container, Logging in DockerHub and Pushing the image
      - name: Build Docker image and Push to Docker Hub
        run: |
          docker build -f AlfredoAI/AIApp/Docker/InferenceAPI.Dockerfile -t kazuhirabenedictmiller/alfredoaiapp:latest AlfredoAI/AIApp
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker push kazuhirabenedictmiller/alfredoaiapp:latest
          docker logout
          sudo rm -rf /home/admin/.docker/config.json

# Configuring AWS Credentials within the Github Action Container at Runtime
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}

# Writing the SSH Key to File within the Github Action Container at Runtime
      - name: Write SSH key to file
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

# (<< 'EOF' ... EOF) allows to execute multiple commands on the remote server in a single SSH session. 
# Using single quotes around EOF ensures that the variables are expanded on the remote server, not locally.
      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem admin@${{ secrets.EC2_IP_ADDRESS }} << 'EOF'
            ACTUAL_API_KEY=$(aws ssm get-parameter --name "ACTUAL_API_KEY" --with-decryption --query "Parameter.Value" --output text)
            docker pull kazuhirabenedictmiller/alfredoaiapp:latest
            docker stop AIInference || true
            docker rm AIInference || true
            docker run -d -it -p 8000:8000 -e ACTUAL_API_KEY="$ACTUAL_API_KEY" --name AIInference kazuhirabenedictmiller/alfredoaiapp:latest
            docker image prune -a -f
          EOF

#          ssh -o StrictHostKeyChecking=no -i key.pem admin@${{ secrets.EC2_IP_ADDRESS }} "
#            export ACTUAL_API_KEY=$(aws ssm get-parameter --name "ACTUAL_API_KEY" --with-decryption --query "Parameter.Value" --output text)
#            docker pull kazuhirabenedictmiller/alfredoaiapp:latest;
#            docker stop AIInference || true;
#            docker rm AIInference || true;
#            docker run -d -it -p 8000:8000 -e ACTUAL_API_KEY="$ACTUAL_API_KEY" --name AIInference kazuhirabenedictmiller/alfredoaiapp:latest;
#            docker image prune -a -f;
#          "